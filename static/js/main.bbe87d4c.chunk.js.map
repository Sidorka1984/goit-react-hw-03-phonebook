{"version":3,"sources":["component/Container/Container.styles.jsx","component/Container/Container.jsx","component/Form/Form.styles.jsx","component/Form/Form.jsx","component/Filter/Filter.styles.jsx","component/Filter/Filter.jsx","component/ContactsList/ContactsList.styles.jsx","component/ContactsList/ContactsList.jsx","App.js","index.js"],"names":["Containers","styled","div","Title","h1","Container","title","children","propType","PropType","string","isRequired","TitleSecond","h2","Input","input","Button","button","Form","state","name","number","nameInputId","uuidv4","numberInputId","heandleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","placeholder","pattern","onChange","id","required","disabled","Component","Text","p","Filter","Contact","ul","ContactItem","li","BtnDelete","ContactsList","contacts","onDeleteContact","map","onClick","App","filter","formSubmitHandle","entry","some","contact","alert","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","DeleteContact","contactId","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbe87d4c.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\nexport const Containers = styled.div`\r\n  max-width: 500px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: 20px 50px;\r\n  background-color: #d2ffff;\r\n  box-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\n  border-radius: 5px;\r\n  &:hover{\r\n      box-shadow: 0px 0px 5px  rgba(0,0,0,0.5);\r\n  }\r\n`\r\nexport const Title = styled.h1`\r\n    text-align: center;\r\n   \r\n    color: #000;\r\n    font-weight: bold;\r\n    font-size: 42px;\r\n`","import PropType from 'prop-types';\r\nimport { Containers, Title } from './Container.styles';\r\nimport { FaBookOpen } from 'react-icons/fa';\r\n\r\nconst Container = ({ title, children }) => (\r\n    <Containers>\r\n        <Title><FaBookOpen /> {title}</Title>\r\n        {children}\r\n    </Containers>\r\n);\r\nContainer.propType = {\r\n    title: PropType.string.isRequired,\r\n};\r\nexport default Container;\r\n","import styled from \"@emotion/styled\";\r\n\r\n\r\nexport const TitleSecond = styled.h2`\r\nfont-size: 17px;\r\nfont-weight: 500;\r\nmargin: 0;\r\njustify-content:center;\r\npadding-bottom: 10px;\r\n`\r\nexport const Input = styled.input`\r\nmax-width:350px;\r\ndisplay: flex;\r\npadding:5px;\r\nmargin-bottom: 20px;\r\ncursor: pointer;\r\nborder:  solid 2px #c8e7f9;\r\nbox-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\nborder-radius:5px;\r\n&:hover{\r\n    border:  solid 2px #79e000;\r\n    box-shadow: 0 0 20px rgba(121, 224, 0, 0.5);\r\n}`\r\n\r\nexport const Button = styled.button`\r\npadding: 5px;\r\nborder:  solid 2px #6b6a6a4c;\r\nborder-radius:5px;\r\n&:hover{\r\n    color: #09c3e4;\r\n    border: solid 2px #79e000;\r\n    box-shadow: 0 0 20px rgba(121, 224, 0, 0.5); \r\n}\r\n`","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { Input, TitleSecond, Button } from './Form.styles';\r\nimport { FiUser, FiPhoneCall } from 'react-icons/fi';\r\nimport { AiOutlineUserAdd } from 'react-icons/ai';\r\n\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    }\r\n\r\n    nameInputId = uuidv4();\r\n    numberInputId = uuidv4();\r\n\r\n    heandleChange = (e) => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({ [name]: value });\r\n    };\r\n    \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.reset();\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            name: \"\",\r\n            number: \"\",\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <TitleSecond htmlFor={this.nameInputId}><FiUser /> Name</TitleSecond>\r\n                <Input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    value={name}\r\n                    onChange={this.heandleChange}\r\n                    id={this.nameInputId}\r\n                    required                    \r\n                />\r\n                <TitleSecond htmlFor={this.numberInputId}><FiPhoneCall /> Number</TitleSecond>\r\n                <Input\r\n                    type=\"tel\"\r\n                    name='number'\r\n                    placeholder='Enter number'\r\n                    onChange={this.heandleChange}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"                                       \r\n                    value={number}\r\n                    id={this.numberInputId}\r\n                    required\r\n                />\r\n                <Button\r\n                    type=\"submit\"\r\n                    disabled={!name || !number}><AiOutlineUserAdd /> Add contact</Button>\r\n\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form;","import styled from \"@emotion/styled\";\r\n\r\nexport const Text = styled.p`\r\nfont-size:20px;\r\n`","import PropTypes from 'prop-types';\r\nimport { Input } from '../Form/Form.styles';\r\nimport { Text } from './Filter.styles';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n    return (\r\n        <>\r\n            <Text>Find contacts by name</Text>\r\n            <Input\r\n                type='text'\r\n                name='name'\r\n                placeholder=\"Name to search\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                value={value}\r\n                onChange={onChange}\r\n                required>\r\n                \r\n            </Input>\r\n        </>\r\n    )\r\n}\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import styled from '@emotion/styled'\r\n\r\nexport const Contact = styled.ul`\r\nwidth: 350px;\r\npadding: 0;\r\n`\r\n\r\nexport const ContactItem = styled.li`\r\ndisplay: flex;\r\ntext-align:center;\r\nalign-items:center;\r\njustify-content: space-around;\r\n`\r\n\r\nexport const BtnDelete = styled.button`\r\nbackground-color: #c8e7f9;\r\nmin-width: 40px;\r\nheight: 40px;\r\nborder: solid 2px #c8e7f9;\r\nbox-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\nborder-radius: 10%;\r\npadding: 3px;\r\n&:hover{\r\n    color: #79e000;\r\n    border:  solid 2px #79e000;\r\n    box-shadow: 1px 2px 2px 0 rgba(121, 224, 0, 0.5);\r\n}\r\n`\r\n\r\nexport const Text = styled.p`\r\nfont-size: 17px;\r\nfont-weight:400;\r\n`","import PropTypes from 'prop-types';\r\nimport { Contact, ContactItem, BtnDelete, Text } from './ContactsList.styles';\r\nimport { AiOutlineDelete, AiOutlineUser } from 'react-icons/ai';\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => {\r\n    return (\r\n        <Contact>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <ContactItem key={id}><AiOutlineUser /><Text>{name}:{number}</Text>\r\n                    <BtnDelete onClick={()=> onDeleteContact(id)}><AiOutlineDelete/></BtnDelete>                    \r\n                </ContactItem>\r\n            ))}\r\n        </Contact>\r\n    )\r\n}\r\nContactsList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n        })\r\n    ).isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactsList;","// import \"./App.css\";\nimport React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport contacts from \"./Data/contacts.json\";\nimport Container from \"./component/Container\";\nimport Form from \"./component/Form\";\nimport Filter from \"./component/Filter/Filter.jsx\";\nimport ContactsList from \"./component/ContactsList/ContactsList\";\nimport { GrContactInfo } from \"react-icons/gr\";\n\nclass App extends Component {\n  state = {\n    contacts: contacts,\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    if (contacts) {\n      this.setState({ contacts: JSON.parse(contacts) });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  formSubmitHandle = ({ name, number }) => {\n    const { contacts } = this.state;\n    const entry = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    if (contacts.some((contact) => contact.name === name)) {\n      alert(`${name} is already in the contacts.`);\n      return;\n    }\n    this.setState((prevState) => ({\n      ...prevState,\n      contacts: [entry, ...prevState.contacts],\n    }));\n  };\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  DeleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <Container title=\"Phonebook\">\n        <Form onSubmit={this.formSubmitHandle} />\n        <h2>\n          <GrContactInfo /> Contacts\n        </h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactsList\n          contacts={visibleContacts}\n          onDeleteContact={this.DeleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}